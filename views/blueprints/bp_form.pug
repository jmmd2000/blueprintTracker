extends ../layout

block content
  h1(class="pageHeader")= title
  h3(class="subtitle") !{gun.title}

  form(method='POST' action='')

    // Gun Name
    div.form-group
      label(for='bp_name') Blueprint Name:
      input#bp_name.form-control(type='text', placeholder='Name of blueprint...' name='bp_name' required='true' value=(undefined===bp ? '' : bp.title) )

    // Gun Description
    div.form-group
      label(for='bp_des') Blueprint Description:
      input#bp_des.form-control(type='text', placeholder='Description...' name='bp_des' required='false' value=(undefined===bp ? '' : bp.description) )

    // Weapon Base
    div.form-group
      label(for='bp_base') Weapon Base:
      select#bp_base.form-control(type='select', placeholder='Select weapon class...' name='bp_base' required='true')
        option(value=gun._id selected) !{gun.title}

    // Weapon Base
    div.form-group
      label(for='bp_wc') Weapon Class:
      select#bp_wc.form-control(type='select', placeholder='Select weapon class...' name='bp_wc' required='true')
        option(value=gun.weaponClass._id selected) !{gun.weaponClass.title}


    h4 Attachments

    div.form-group(class="checkboxContainer")
      each cat in cats
        if gun.primary == true
          if cat.primary == true
            if cat.game._id.toString() == gun.weaponClass.game._id.toString()
              label(class="checkboxTitle") !{cat.title}
              div(class="checkboxes")
           
                  for att in gun.compatible
                    if cat._id.toString() == att.attachmentCategory.toString()
                      // if this form is accessed thru "Update", fill in the attachments that have been selected before
                
                      div(style='display: inline; padding-right:10px;')
                        if bp
                          - if(bp.attachments.includes(att.toString()))
                            input.checkbox-input(type='checkbox', name="attachments", id=att._id, value=att._id, checked)
                            label(for=att._id class="checkboxLabel") !{att.title}
                          - else
                            input.checkbox-input(type='checkbox', name="attachments", id=att._id, value=att._id)
                            label(for=att._id class="checkboxLabel") !{att.title}
                        else
                          input.checkbox-input(type='checkbox', name="attachments", id=att._id, value=att._id)
                          label(for=att._id class="checkboxLabel") !{att.title}
        else
          if cat.secondary == true
            if cat.game._id.toString() == gun.weaponClass.game._id.toString()
              label(class="checkboxTitle") !{cat.title}
              div(class="checkboxes")
           
                  for att in gun.compatible
                    if cat._id.toString() == att.attachmentCategory.toString()
                      // if this form is accessed thru "Update", fill in the attachments that have been selected before
                
                      div(style='display: inline; padding-right:10px;')
                        if bp
                          - if(bp.attachments.includes(att.toString()))
                            input.checkbox-input(type='checkbox', name="attachments", id=att._id, value=att._id, checked)
                            label(for=att._id class="checkboxLabel") !{att.title}
                          - else
                            input.checkbox-input(type='checkbox', name="attachments", id=att._id, value=att._id)
                            label(for=att._id class="checkboxLabel") !{att.title}
                        else
                          input.checkbox-input(type='checkbox', name="attachments", id=att._id, value=att._id)
                          label(for=att._id class="checkboxLabel") !{att.title}

    div.form-group
      label(for='wz') Made for Warzone? :
      select#wz.form-control(type='select', placeholder='Made for Warzone?..' name='wz' required='true')
        if bp
          if bp.warzone == true
            option(value='true' selected) True
            option(value='false') False
          else
            option(value='true') True
            option(value='false' selected) False
        else
          option(value='true' selected) True
          option(value='false') False

    br
    button.btn.btn-secondary(type='submit') Submit

  if errors 
    ul
      for error in errors
        li!= error.msg
